// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ROBOTMAP_H
#define ROBOTMAP_H

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "WPILib.h"
#include "ctre/Phoenix.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
class RobotMap {
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	static std::shared_ptr<frc::SpeedController> mobilityFLspeedController;
	static std::shared_ptr<frc::SpeedController> mobilityRLspeedController;
	static std::shared_ptr<WPI_TalonSRX> mobilityfrontLeftMotor;
	static std::shared_ptr<WPI_TalonSRX> mobilityrearLeftMotor;
	static std::shared_ptr<frc::SpeedControllerGroup> mobilityleftSpeedController;
	static std::shared_ptr<frc::SpeedController> mobilityFRspeedController;
	static std::shared_ptr<frc::SpeedController> mobilityRRspeedController;
	static std::shared_ptr<WPI_TalonSRX> mobilityfrontRightMotor;
	static std::shared_ptr<WPI_TalonSRX> mobilityrearRightMotor;
	static std::shared_ptr<frc::SpeedControllerGroup> mobilityrightSpeedController;
	static std::shared_ptr<frc::DifferentialDrive> mobilityDifferentialDrive1;
	static std::shared_ptr<frc::Encoder> mobilityleftEncoder;
	static std::shared_ptr<frc::Encoder> mobilityrightEncoder;
	static std::shared_ptr<WPI_TalonSRX> liftelevatorMotor;
	static std::shared_ptr<frc::SpeedController> liftelevatorSpeedController;
	static std::shared_ptr<frc::DigitalInput> lifttopLS;
	static std::shared_ptr<frc::DigitalInput> liftbottomLS;
	static std::shared_ptr<frc::AnalogPotentiometer> liftStringPot;
	static std::shared_ptr<frc::Solenoid> armsxAxisSolenoid;
	static std::shared_ptr<frc::Solenoid> armsyAxisSolenoid;
	static std::shared_ptr<frc::Solenoid> rungbackBarSolenoid;
	static std::shared_ptr<frc::SpeedController> climberclimberSpeedController;
	static std::shared_ptr<WPI_TalonSRX> climberclimberMotor;
	static std::shared_ptr<frc::AnalogPotentiometer> climberstringPot;
	static std::shared_ptr<frc::DigitalInput> climberLimitSwitch1;
	static std::shared_ptr<frc::DigitalInput> climberLimitSwitch2;
	static std::shared_ptr<frc::DigitalOutput> lEDLightsLED;
	static std::shared_ptr<WPI_TalonSRX> conveyorBeltsleftConveyorBelt;
	static std::shared_ptr<WPI_TalonSRX> conveyorBeltsrightConveyorBelt;
	static std::shared_ptr<frc::DifferentialDrive> conveyorBeltsConveyorDrive;
	static std::shared_ptr<frc::DigitalInput> conveyorBeltsLimitSwitch1;
	static std::shared_ptr<frc::DigitalInput> conveyorBeltsLimitSwitch2;
	static std::shared_ptr<WPI_TalonSRX> conveyorBeltsTalonSRX1;
	static std::shared_ptr<WPI_TalonSRX> conveyorBeltsTalonSRX2;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	static void init();
};
#endif
